<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAARFSURBVHhe7ZvNTxNBGMbrH+FdDLGAB01MjIYAauLBm3hF
        DyYm/gkerBq5+EE84YGCLRrFj8SPg6AYE2nBAAmoscYYDSSgoigKLU0tQszrPmUHtuXddtvO7k4pT/Ik
        sN228/y6Mzv7TsazIqJN3ra+o9X+0ECVPxTTTOvMMWRDRmTVUy+rMti/ucof7mbetE4d7kbm5fQajfIK
        r7st9Dh1JeCSYE8oA3vbw00evc+zJ6x3e9tC/R7tj/U44Fl1FAC4F8rGGwC4g+XkDQDcwXLyBgDuYDl5
        AwB3UHXvDPRT/c1B9rV8XXIAdgUH6M10jGILS3TkwSh7Tj4uKQAivFA0uUiNd4u7EpQDcLz7LdUxlzfC
        vzaEF4r+WaDaYN+a861aKQA7rvVTcukfTcb+0P6uoZXjZuGh0clpqmm+Qdtae9M+y6qVAnCiJ6LHIpqK
        J+ngneFU+Fffo/rRdCH89uZO2nK6nSrOBAqCoBSA65EverRlTScW6P1MXP8vXSMTq+GFC4GgFICxuYQe
        L7u48EYI3qvP2M/nrAyAfVqftyKErznPhxfOB4IyAHzhj3pEc72bmskZXtgqBGUAPB3/qcc01/R8guqv
        3GEDc7YCQQkA1ZrntEmNFX2di1Nty202MOdcEJQAcPj+qB7PmiZ/z9Pui7fYwJyzQVACwIXBMT2aNSUX
        l6gp2MOGNbMZBCUAvJj4pUcz16cfs9TxMkLHOp+Q91yADZnLHATXAWxvD9P83yU95qpmE0nqjozTqYdh
        2nu5iw1UiDMhuA7gQNdwKnAs+Zeef5ig5p5BOtT6gCp8fAAZNkJQogs0+Htpq6+DbaxdFhBcAYDLHr+8
        8Vhly0O2oXYaEBwBgPs8bnUY7THgiT7f4E8fkNyAYBsAzO0xvcUMj5vkoM/jsq9seZT2PqchSAOAYgae
        5/FIa+WpDgOeaISbEKQAQBkLlZx8hNHe2BC3IEgBgBre51hSj2ZNuNVlNsYNCNK6AEb1b/EFPV52YZJj
        dp9fC+ERe54sSx0EUcP7kcgNATM8rjHCTkKQCgAFTLManlGY3nKNMdopCNIAZCtdZ2rPJWtzeycgSAGQ
        T3g81XENMbPdEIoGkC18ZGomVcYyCo+0XEOy2U4IRQFAeONanVGieosaHspYQnie5xqSy3ZBKBgAlqhz
        hRdfghoeylio5BRazIDtgFAwAEx+sESdKbNFC9Tw8i1jcZYNoagugPV5LFELGdfq7LRMCEUPgo33hlJL
        1E6FF5YFoWgAcF1nKLVEzX2BnZYBQQoAGOUlVFi4L7HTxUKQBgAuRQhSAcClBkE6ALiUINgCAC4VCLYB
        gEsBgq0AYNUh2A4AVhkCADiyaUpFCBW+jrij2+ZUg1DhC4w4vnFSKQhngydd2TqrBASxdRZKbZ7WDhgb
        abddhaBlXd08LaTRwF5abCfVGhjNbLAddhICBjz0+dRlL355j8fzH3vH+AhrugLSAAAAAElFTkSuQmCC
</value>
  </data>
</root>